/**
 * item 26 : 尽可能延后变量定义式的出现时间
 * 
 * 大多数情况下, 适当提出你的 classes(和 class templates) 定义以及 functions(和 function templates)声明
 * , 是花费最多心力的两件事. 一旦正确完成他们, 相应的实现大多直接了当.
 * 
 * 太快定义变量可能造成效率上的拖延;
 * 过度使用转型可能导致代码变得难以维护, 又招来微妙难解的错误;
 * 返回对象 ``内部数据之号码牌"可能会破坏封装并留给客户虚吊号码牌;
 * 未考虑异常带来的冲击可能导致资源泄漏和数据败坏;
 * 过度热心的使用 inlining 可能引起代码膨胀;
 * 过度耦合可能导致让人不满意的冗长 建立时间(build times).
*/

